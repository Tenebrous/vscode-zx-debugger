ALL 0000h rom_start
ALL 0000h restart
ALL 0000h start             ; cold start restart
ALL 0008h error_1           ; the 'error' restart
ALL 0010h print_a_1         ; the 'print a character' restart (char in A)
ALL 0018h get_char          ; the 'collect character' restart
ALL 001ch test_char         ; Skip-over tests if character is relevant
ALL 0020h next_char         ; the 'collect next character' restart
ALL 0028h fp_calc           ; the 'calculator' restart
ALL 0030h bc_spaces         ; the 'make BC spaces' restart
ALL 0038h mask_int          ; the 'maskable interrupt' routine
ALL 0048h key_int           ; read and decode keyboard
ALL 0053h error_2           ; the 'error-2' routine (continuation of rst 8 routine)
ALL 0055h error_3
ALL 0066h nmi               ; the 'non-maskable interrupt' (NMI) routine
ALL 0066h reset
ALL 0070h no_reset
ALL 0074h ch_add_plus_1     ; the 'ch-add+1' subroutine (called from rst 20)
ALL 0077h temp_ptr1
ALL 0078h temp_ptr2
ALL 007dh skip_over         ; the 'skip-over' subroutine (skipping white-spaces)
ALL 0090h skips
ALL 0095h token_table       ; tokenized characters 134d (RND) ..255d (COPY)
ALL 0205h main_keys         ; maps for the 39 keys L-mode and Caps Shift
ALL 022ch ext_unshift       ; 26 extended mode keys, letter keys and unshifted
ALL 0246h ext_shift         ; 26 extended mode keys, letter keys and shifted
ALL 0260h ctl_codes         ; 10 control codes, digit keys and Caps Shift
ALL 026ah sym_codes         ; 26 symbol codes, letter keys and Symbol Shift
ALL 0284h ext_digits        ; 10 extended mode keys, digit keys and Symbol Shift
ALL 028eh key_scan          ; the 'keyboard scanning' subroutine (result in DE)
ALL 0296h key_line          ; eight passes loop
ALL 029fh key_3keys
ALL 02a1h key_bits
ALL 02abh key_done
ALL 02bfh keyboard          ; the 'keyboard' subroutine (called from interrupt 50 times per second)
ALL 02c6h k_st_loop
ALL 02d1h k_ch_set
ALL 02f1h k_new             ; new key is to be accepted
ALL 0308h k_end
ALL 0310h k_repeat          ; the 'repeating key' subroutine (occurs after REPDEL period)
ALL 031eh k_test            ; the 'k-test' subroutine
ALL 032ch k_main
ALL 0333h k_decode          ; the 'keyboard decoding' subroutine (main code in E, shift byte in B)
ALL 0341h k_e_let           ; letter keys in extended mode
ALL 034ah k_lookup          ; look-ups key tables b-f
ALL 034fh k_klc_let         ; letter keys in K, L or C modes
ALL 0364h k_tokens          ; adds A5 to produce token code
ALL 0367h k_digit           ; digit keys, space & enter, both shifts
ALL 0382h k_8_and_9         ; 8 and 9 key getting BRIGHT/FLASH codes
ALL 0389h k_gra_dgt         ; graphics mode with digits
ALL 039dh k_klc_dgt         ; digit keys in K, L and C modes
ALL 03b2h k_@_char          ; handling the @ char
ALL 03b5h beeper            ; the 'beeper' subroutine
ALL 03d1h be_ix_3
ALL 03d2h be_ix_2
ALL 03d3h be_ix_1
ALL 03d4h be_ix_0
ALL 03d6h be_h_and_l_lp
ALL 03f2h be_again
ALL 03f6h be_end
ALL 03f8h beep              ; the 'BEEP' command routine
ALL 0425h be_i_ok           ; correct frequ for the 'pitch' i
ALL 0427h be_octave
ALL 046ch report_b          ; report B - integer out of range
ALL 046eh semi_tones        ; the 'semi-tone' table
ALL 04aah prog_name_zx81    ; program name subroutine of ZX81
ALL 04c2h sa_bytes          ; the 'sa-bytes' subroutine (SAVE header and code)
ALL 04d0h sa_flag
ALL 04d8h sa_leader         ; produce an edge (red to cyan)
ALL 04eah sa_sync_1         ; produce a sync pulse
ALL 04f2h sa_sync_2
ALL 04feh sa_loop           ; the SAVEing loop
ALL 0505h sa_loop_p
ALL 0507h sa_start
ALL 050eh sa_parity         ; sends the parity byte (in L)
ALL 0511h sa_bit_2          ; produces pulses
ALL 0514h sa_bit_1
ALL 051ah sa_set
ALL 051ch sa_out
ALL 0525h sa_8_bits         ; 8-bit-loop
ALL 053ch sa_delay          ; time delay
ALL 053fh sa_ld_ret         ; the 'sa/ld-ret' subroutine
ALL 0552h report_d          ; report D - BREAK-CONT repeats
ALL 0554h sa_ld_end
ALL 0556h ld_bytes          ; the 'ld-bytes' subroutine (loads from cassette)
ALL 056bh ld_break
ALL 056ch ld_start
ALL 0574h ld_wait           ; waits a while
ALL 0580h ld_leader         ; accepts a leader signal only
ALL 058fh ld_sync           ; off and on parts of the sync pulse
ALL 05a9h ld_loop           ; loads the data
ALL 05b3h ld_flag
ALL 05bdh ld_verify         ; verifies the loaded byte
ALL 05c2h ld_next           ; next byte
ALL 05c4h ld_dec
ALL 05c8h ld_marker
ALL 05cah ld_8_bits         ; build up a byte in L
ALL 05e3h ld_edge2          ; the 'ld-edge-2' and 'ld-edge-1' subroutines
ALL 05e7h ld_edge1
ALL 05e9h ld_delay
ALL 05edh ld_sample
ALL 0605h save_etc          ; the 'SAVE, LOAD, VERIFY & MERGE' command routines
ALL 0621h sa_space
ALL 0629h sa_blank
ALL 0642h report_f          ; report F - invalid file name
ALL 0644h sa_null           ; handle the name of program
ALL 064bh sa_name           ; transfers name to workspace
ALL 0652h sa_data           ; different parameters after command
ALL 0620h report_2          ; report 2 - variable not found
ALL 0672h sa_v_old          ; handling an existing array
ALL 0685h sa_v_new          ; handling old and new arrays
ALL 068fh sa_v_type
ALL 0692h sa_data_1
ALL 06a0h sa_scr            ; handling SCREEN$
ALL 06c3h sa_code           ; handling CODE
ALL 06e1h sa_code_1         ; look for starting address
ALL 06f0h sa_code_2
ALL 06f5h sa_code_3         ; fetching the length, if specified
ALL 06f9h sa_code_4         ; store parameters in the workspace
ALL 0710h sa_type_3         ; SCREEN$ and CODE type
ALL 0716h sa_line           ; LINE parameter
ALL 0723h sa_line_1         ; line number that follows LINE
ALL 073ah sa_type_0         ; LINE and no params = type 0
ALL 075ah sa_all            ; separates SAVE fom LOAD, VERIFY and MERGE
ALL 0767h ld_look_h         ; loop that is left when a header has been loaded
ALL 078ah ld_type           ; type checking and output message 'program', 'number array', etc.
ALL 07a6h ld_name           ; print new name loop
ALL 07adh ld_ch_pr
ALL 07cbh vr_contrl         ; the 'VERIFY' control routine
ALL 07e9h vr_cont_1         ; destination pointer
ALL 07f4h vr_cont_2
ALL 0800h vr_cont_3
ALL 0802h ld_block          ; the 'load a data block' subroutine
ALL 0806h report_r          ; report R - Tape loading error
ALL 0808h ld_contrl         ; the 'LOAD' control routine
ALL 0819h ld_cont_1         ; checking enough room
ALL 0825h ld_cont_2         ; test for room
ALL 082eh ld_data           ; loading of arrays
ALL 084ch ld_data_1         ; make space for the new array
ALL 0873h ld_prog           ; loading a Basic program+variables
ALL 08adh ld_prog_1         ; data block can be loaded
ALL 08b6h me_contrl         ; the 'MERGE' control routine
ALL 08d2h me_new_lp         ; loop with the lines of new program
ALL 08d7h me_old_lp         ; inner loop with lines of old program
ALL 08dfh me_old_l1
ALL 08ebh me_new_l2
ALL 08f0h me_var_lp         ; merging variables
ALL 08f9h me_old_vp         ; inner loop to search existing variables area
ALL 0901h me_old_v1
ALL 0909h me_old_v2         ; old and new variables match
ALL 0912h me_old_v3         ; loop for comparing letters of long names
ALL 091eh me_old_v4
ALL 0921h me_var_l1         ; match was found
ALL 0923h me_var_l2         ; match was not found
ALL 092ch me_enter          ; the 'MERGE a line or a variable' subroutine
ALL 093eh me_ent_1          ; the new entry can be made
ALL 0955h me_ent_2
ALL 0958h me_ent_3
ALL 0970h sa_contrl         ; the 'SAVE' control routine
ALL 0991h sa_1_sec          ; delay and save program/data
ALL 09a1h cass_messages     ; the cassette messages
ALL 09f4h print_out         ; the 'PRINT-out' routines
ALL 0a11h ctrl_ch_table     ; the 'control character' table
ALL 0a23h po_back_1         ; the 'cursor left' subroutine
ALL 0a38h po_back_2
ALL 0a3ah po_back_3
ALL 0a3dh po_right          ; the 'cursor right' subroutine
ALL 0a4fh po_enter          ; the 'carriage return' subroutine
ALL 0a5fh po_comma          ; the 'PRINT comma' subroutine
ALL 0a69h po_quest          ; the 'PRINT a question mark' subroutine
ALL 0a6dh po_tv_2           ; the 'control characters with operands' routine
ALL 0a75h po_2_oper         ; handling AT & TAB
ALL 0a7ah po_1_oper         ; handling colour items INK to OVER
ALL 0a7dh po_tv_1
ALL 0a80h po_change         ; current output routine address changed temporarily
ALL 0a87h po_cont           ; operands have been collected
ALL 0aach po_at_err         ; error in AT parameter(s)
ALL 0abfh po_at_set
ALL 0ac2h po_tab            ; TAB control character
ALL 0ac3h po_fill
ALL 0ad0h po_space
ALL 0ad9h po_able
ALL 0adch po_store          ; the 'position store' subroutine
ALL 0af0h po_st_e
ALL 0afch po_st_pr
ALL 0b03h po_fetch          ; the 'position fetch' subroutine
ALL 0b1dh po_f_pr
ALL 0b24h po_any            ; the 'PRINT any character(s)' subroutine
ALL 0b38h po_gr_1           ; graphic characters
ALL 0b3eh po_gr_2
ALL 0b4ch po_gr_3
ALL 0b52h po_t_and_udg      ; print-out token codes and user-def-graphics
ALL 0b5fh po_t
ALL 0b65h po_char           ; required character form is identified
ALL 0b6ah po_char_2
ALL 0b76h po_char_3
ALL 0b7fh pr_all            ; the 'PRINT all characters' subroutine
ALL 0b93h pr_all_1
ALL 0ba4h pr_all_2
ALL 0bb6h pr_all_3
ALL 0bb7h pr_all_4          ; prints the character (8 pixel lines)
ALL 0bc1h pr_all_5
ALL 0bd3h pr_all_6
ALL 0bdbh po_attr           ; the 'set attribute byte' subroutine
ALL 0bfah po_attr_1
ALL 0c08h po_attr_2
ALL 0c0ah po_msg            ; the 'message printing' subroutine
ALL 0c10h po_tokens         ; expanding token codes
ALL 0c14h po_table          ; table is searched and entry printed
ALL 0c22h po_each
ALL 0c35h po_tr_sp          ; traling space
ALL 0c3bh po_save           ; the 'po-save' subroutine
ALL 0c41h po_search         ; the 'table search' subroutine
ALL 0c44h po_step
ALL 0c55h po_scr            ; the 'test for scroll' subroutine
ALL 0c86h report_5          ; report 5 - Out of screen
ALL 0c88h po_scr_2          ; is prompt "scroll?" necessary?
ALL 0cd2h po_scr_3          ; scrolling the display
ALL 0cf0h po_scr_3a
ALL 0cf8h scroll_msg        ; the "scroll?" message
ALL 0d00h report_d2         ; report D - BREAK-CONT repeats
ALL 0d02h po_scr_4          ; lower part of display
ALL 0d1ch po_scr_4a         ; lower part is scrolled 'A' times
ALL 0d2dh po_scr_4b
ALL 0d4dh temps             ; the 'temporary colour items' subroutine
ALL 0d5bh temps_1
ALL 0d65h temps_2
ALL 0d6bh cls               ; the 'CLS' command routine
ALL 0d6eh cls_lower
ALL 0d87h cls_1
ALL 0d89h cls_2
ALL 0d8eh cls_3
ALL 0d94h cl_chan
ALL 0da0h cl_chan_a
ALL 0dafh cl_all            ; the 'cleaning the whole display area' subroutine
ALL 0dd9h cl_set            ; the 'cl-set' subroutine
ALL 0deeh cl_set_1
ALL 0df4h cl_set_2
ALL 0dfeh cl_sc_all         ; the 'scrolling' subroutine
ALL 0e00h cl_scroll
ALL 0e05h cl_scr_1          ; main scrolling loop
ALL 0e0dh cl_scr_2
ALL 0e19h cl_scr_3          ; scrolls the pixel lines within the thirds
ALL 0e44h cl_line           ; the 'clear lines' subroutine (bottom B lines of display)
ALL 0e4ah cl_line_1         ; loop to clear all pixel lines
ALL 0e4dh cl_line_2
ALL 0e80h cl_line_3
ALL 0e88h cl_attr           ; the 'cl-attr' subroutine
ALL 0e9bh cl_addr           ; the 'cl-addr' subroutine (calculates display address of line B)
ALL 0each copy_stmt         ; the 'COPY' command routine
ALL 0eb2h copy_1            ; loop
ALL 0ec9h copy_2
ALL 0ecdh copy_buff         ; the 'COPY-buff' subroutine
ALL 0ed3h copy_3
ALL 0edah copy_end
ALL 0edfh clear_prb         ; the 'clear printer buffer' subroutine
ALL 0ee7h prb_bytes
ALL 0ef4h copy_line         ; the 'COPY-line' subroutine
ALL 0efdh copy_l_1
ALL 0f0ch copy_l_2
ALL 0f14h copy_l_3
ALL 0f18h copy_l_4
ALL 0f1eh copy_l_5
ALL 0f2ch editor            ; the 'editor' routines
ALL 0f30h ed_again
ALL 0f38h ed_loop           ; loop that handles each keystroke
ALL 0f6ch ed_contr          ; fetch other bytes of control characters
ALL 0f81h add_char          ; the 'addchar' subroutine (adds a code to EDIT or INPUT line)
ALL 0f8bh add_ch_1
ALL 0f92h ed_keys           ; handling editing keys
ALL 0fa0h ed_keys_table     ; the 'editing keys' table
ALL 0fa9h ed_edit           ; the 'edit key' subroutine
ALL 0ff3h ed_down           ; the 'cursor down editing' subroutine
ALL 1001h ed_stop
ALL 1007h ed_left           ; the 'cursor left editing' subroutine
ALL 100ch ed_right          ; the 'cursor right editing' subroutine
ALL 1011h ed_cur
ALL 1015h ed_deletee        ; the 'delete editing' subroutine
ALL 101eh ed_ignore         ; the 'ed-ignore' subroutine
ALL 1024h ed_enter          ; the 'ENTER editing' subroutine
ALL 1026h ed_end
ALL 1031h ed_edge           ; the 'ed-edge' subroutine
ALL 103eh ed_edge_1         ; check that control codes are not split from parameters
ALL 1051h ed_edge_2
ALL 1059h ed_up             ; the 'cursor up editing' subroutine
ALL 106eh ed_list
ALL 1076h ed_symbol         ; the 'ed-symbol' subroutine
ALL 107ch ed_graph
ALL 107fh ed_error          ; the 'ed-error' subroutine
ALL 1097h clear_sp          ; the 'clear-sp' subroutine (clears editing area or workspace)
ALL 10a8h key_input         ; the 'keyboard input' subroutine
ALL 10dbh key_m_and_cl      ; handles CAPS LOCK and mode codes
ALL 10e6h key_mode
ALL 10f4h key_flag
ALL 10fah key_contr         ; control key codes are changed
ALL 1105h key_data          ; parameter is saved in K-DATA
ALL 110dh key_next
ALL 1113h key_chan          ; set input address in first channel area
ALL 111bh key_done
ALL 111dh ed_copy           ; the 'lower screen copying' subroutine
ALL 1150h ed_blank          ; fill with blanks
ALL 115eh ed_spaces
ALL 1167h ed_full           ; editor line is full
ALL 117ch ed_c_done         ; normal exit
ALL 117eh ed_c_end
ALL 1190h set_hl            ; the 'set-hl' and 'set-de' subroutines
ALL 1195h set_de
ALL 11a7h remove_fp         ; the 'remove-fp' subroutine
ALL 11b7h new_cmd           ; the 'new' command routine
ALL 11cbh start_new         ; main entry point
ALL 11dah ram_check         ; checks memory
ALL 11dch ram_fill
ALL 11e2h ram_read
ALL 11efh ram_done
ALL 1219h ram_set           ; setups
ALL 12a2h main_exec         ; the 'main execution' loop
ALL 12a9h main_1
ALL 12ach main_2
ALL 12cfh main_3            ; edit line passed syntax check
ALL 1303h main_4            ; line has been interpreted
ALL 1313h main_g
ALL 133ch main_5
ALL 1373h main_6
ALL 1376h main_7
ALL 1384h main_8
ALL 1386h main_9
ALL 1391h report_msg        ; the report messages
ALL 1392h report_msg_0      ; report 0 - OK
ALL 1394h report_msg_1      ; report 1 - NEXT without FOR
ALL 13a4h report_msg_2      ; report 2 - variable not found
ALL 13b6h report_msg_3      ; report 3 - subscript wrong
ALL 13c6h report_msg_4      ; report 4 - out of memory
ALL 13d2h report_msg_5      ; report 5 - out of screen
ALL 13dfh report_msg_6      ; report 6 - number too big
ALL 13edh report_msg_7      ; report 7 - RETURN without GOSUB
ALL 1401h report_msg_8      ; report 8 - end of file
ALL 140ch report_msg_9      ; report 9 - STOP statement
ALL 141ah report_msg_A      ; report A - invalid argument
ALL 142ah report_msg_B      ; report B - integer out of range
ALL 143eh report_msg_C      ; report C - nonsense in Basic
ALL 144fh report_msg_D      ; report D - BREAK - CONT repeats
ALL 1463h report_msg_E      ; report E - out of data
ALL 146eh report_msg_F      ; report F - invalid file name
ALL 147fh report_msg_G      ; report G - no room for line
ALL 148fh report_msg_H      ; report H - STOP in INPUT
ALL 149ch report_msg_I      ; report I - FOR without NEXT
ALL 14ach report_msg_J      ; report J - invalid I/O device
ALL 14beh report_msg_K      ; report K - invalid colour
ALL 14cch report_msg_L      ; report L - BREAK into program
ALL 14deh report_msg_M      ; report M - RAMTOP no good
ALL 14ech report_msg_N      ; report N - statement lost
ALL 14fah report_msg_O      ; report O - invalid stream
ALL 1508h report_msg_P      ; report P - FN without DEF
ALL 1516h report_msg_Q      ; report Q - parameter error
ALL 1525h report_msg_R      ; report R - tape loading error
ALL 1537h report_msg_comma  ; report ', '
ALL 1539h report_msg_cpyrgt ; report (C) 1982 Sinclair Research Ltd
ALL 1555h report_g          ; report G - no room for line
ALL 155dh main_add          ; the 'main-add' subroutine
ALL 157dh main_add_1
ALL 15abh main_add_2
ALL 15afh init_chan_info    ; the 'initial channel information'
ALL 15c4h report_j          ; report J - invalid I/O device
ALL 15c6h init_strm_data    ; the 'initial stream data'
ALL 15d4h wait_key          ; the 'wait-key' subroutine
ALL 15deh wait_key_1
ALL 15e4h report_8          ; report 8 - end of file
ALL 15e6h input_ad          ; the 'input-ad' subroutine
ALL 15efh out_code          ; the 'main printing' subroutine
ALL 15f2h print_a_2
ALL 15f7h call_sub          ; call subroutine; hl points to i/o address
ALL 1601h chan_open         ; the 'chan-open' subroutine
ALL 160eh report_o          ; report O - invalid stream
ALL 1610h chan_op_1         ; find the base address
ALL 1615h chan_flag         ; the 'chan-flag' subroutine
ALL 162ch call_jump
ALL 162dh chan_code_lookup  ; the 'channel code look-up' table
ALL 1634h chan_k            ; the 'channel "K" flag' subroutine
ALL 1642h chan_s            ; the 'channel "S" flag' subroutine
ALL 1646h chan_s_1
ALL 164dh chan_p            ; the 'channel "P" flag' subroutine
ALL 1652h one_space         ; the 'make-room' subroutine
ALL 1655h make_room
ALL 1664h pointers          ; the 'pointers' subroutine
ALL 166bh ptr_next          ; loop for each pointer
ALL 167fh ptr_done
ALL 168fh line_zero         ; the 'collect a line number' subroutine
ALL 1691h line_no_a
ALL 1695h line_no
ALL 169eh reserve           ; the 'reserve' subroutine
ALL 16b0h set_min           ; the 'set-min' subroutine (sets editing area to minimum)
ALL 16bfh set_work          ; clear workspace and calculator stack
ALL 16c5h set_stk           ; clears calculator stack
ALL 16d4h rec_edit          ; the 'reclaim the edit-line' subroutine
ALL 16dbh indexer_1         ; the 'indexer' subroutine
ALL 16dch indexer
ALL 16e4h close             ; the 'CLOSE#' command routine
ALL 16fch close_1
ALL 1701h close_2           ; the 'close-2' subroutine
ALL 1716h cls_strm_lookup   ; the 'close stream look-up' table
ALL 171ch close_str         ; the 'close stream' subroutine
ALL 171eh str_data          ; the 'stream data' subrotine
ALL 1725h report_o2         ; report O - invalid stream
ALL 1727h str_data_1        ; continue with valid stream numbers
ALL 1736h open              ; the 'OPEN#' command routine
ALL 1756h open_1
ALL 175dh open_2            ; the 'open-2' subroutine
ALL 1765h report_f2         ; report F - invalid file name
ALL 1767h open_3            ; continue if ok
ALL 177ah open_strm_lookup  ; the 'open stream look-up' table
ALL 1781h open_k            ; the 'open-K' subroutine
ALL 1785h open_s            ; the 'open-S' subroutine
ALL 1789h open_p            ; the 'open-P' subroutine
ALL 178bh open_end
ALL 1793h cat_etc           ; the 'CAT, ERASE, FORMAT & MOVE' command routine
ALL 1795h auto_list         ; the 'LIST & LLIST' command routines
ALL 17ceh auto_l_1          ; loop; auto-line number is increased on each pass
ALL 17e1h auto_l_2          ; auto-listing can be made
ALL 17e4h auto_l_3
ALL 17edh auto_l_4
ALL 17f5h llist             ; the 'LLIST' entry point
ALL 17f9h list              ; the 'LIST' entry point
ALL 17fbh list_1
ALL 1814h list_2
ALL 181ah list_3
ALL 181fh list_4            ; stream was not changed
ALL 1822h list_5
ALL 1833h list_all
ALL 1835h list_all_1        ; loop for printing the lines
ALL 1855h out_line          ; the 'PRINT a whole Basic line' subroutine
ALL 1865h out_line_1
ALL 187dh out_line_2
ALL 1881h out_line_3
ALL 1894h out_line_4        ; print all codes of the remaining line
ALL 18a1h out_line_5
ALL 18b4h out_line_6        ; line has been printed
ALL 18b6h number            ; the 'number' subroutine
ALL 18c1h out_flash         ; the 'PRINT a flashing character' subroutine
ALL 18e1h out_curs          ; the 'PRINT the cursor' subroutine
ALL 18f3h out_c_1
ALL 1909h out_c_2
ALL 190fh ln_fetch          ; the 'LN-fetch' subroutine
ALL 191ch ln_store          ; is used by the editor
ALL 1925h out_sp_2          ; the 'printing characters in a Basic line' subroutine
ALL 192ah out_sp_no
ALL 192bh out_sp_1          ; hl=line number; bc=value for division
ALL 1937h out_char          ; used for all characters, tokens and control codes
ALL 195ah out_ch_1
ALL 1968h out_ch_2
ALL 196ch out_ch_3
ALL 196eh line_addr         ; the 'line-addr' subroutine
ALL 1974h line_ad_1
ALL 1980h cp_lines          ; the 'compare line numbers' subroutine
ALL 1988h find_each         ; the 'find each statement' subroutine
ALL 198bh each_stmt
ALL 1990h each_s_1          ; loop to handle statements of Basic line
ALL 1998h each_s_2          ; check individual characters in the line
ALL 199ah each_s_3
ALL 19a5h each_s_4
ALL 19adh each_s_5
ALL 19b1h each_s_6
ALL 19b8h next_one          ; the 'next-one' subroutine
ALL 19c7h next_o_1
ALL 19ceh next_o_2
ALL 19d5h next_o_3
ALL 19d6h next_o_4
ALL 19dbh next_o_5          ; next line or variable is found
ALL 19ddh differ            ; the 'difference' subroutine
ALL 19e5h reclaim_1         ; the 'reclaiming' subroutine
ALL 19e8h reclaim_2
ALL 19fbh e_line_no         ; the 'e-line-no' subroutine
ALL 1a15h e_l_1
ALL 1a1bh out_num_1         ; the 'report and line number printing' subroutine
ALL 1a28h out_num_2
ALL 1a30h out_num_3         ; print line number in HL
ALL 1a42h out_num_4
ALL 1a48h syntax_table_1    ; the offset table
ALL 1a7ah syntax_table_2    ; the parameter table
ALL 1b17h line_scan         ; the 'main parser' of the Basic interpreter
ALL 1b28h stmt_loop         ; the statement loop
ALL 1b29h stmt_l_1
ALL 1b52h scan_loop         ; executes the commands
ALL 1b55h get_param
ALL 1b6fh separator         ; the 'separator' subroutine
ALL 1b76h stmt_ret          ; the 'statement-ret' subroutine
ALL 1b7bh report_l          ; report L - BREAK into program
ALL 1b7dh stmt_r_1          ; continue if BREAK is not pressed
ALL 1b8ah line_run          ; the 'line-run' entry point
ALL 1b9eh line_new          ; the 'line-new' subroutine
ALL 1bb0h report_0          ; report 0 - OK
ALL 1bb2h rem               ; the 'REM' command routine
ALL 1bb3h line_end          ; the 'line-end' routine
ALL 1bbfh line_use          ; the 'line-use' routine
ALL 1bd1h next_line         ; the 'next-line' routine
ALL 1bech report_n          ; report N - statement lost
ALL 1beeh check_end         ; the 'check-end' subroutine
ALL 1bf4h stmt_next         ; the 'statement-next' routine
ALL 1c01h cmd_class_table   ; the 'command class' table
ALL 1c0dh class_03          ; the 'command classes 00, 03 & 05' routine (class 03 commands could have a numeric operand)
ALL 1c10h class_00          ; class 00 commands must not have operands
ALL 1c11h class_05          ; class 05 commands can have a set of items (e.g. PRINT)
ALL 1c16h jump_c_r          ; the 'jump-c-r' routine
ALL 1c1fh class_01          ; the 'command classes 01, 02 & 04' routine (class 01 has a variable that is to be assigned)
ALL 1c22h var_a_1           ; the 'variable in assignment' subroutine
ALL 1c2eh report_2b         ; report 2 - variable not found
ALL 1c30h var_a_2           ; handles existing variables
ALL 1c46h var_a_3
ALL 1c4eh class_02          ; class 02 contains calculation
ALL 1c56h val_fet_1         ; the 'fetch a value' subroutine (LET, READ, INPUT)
ALL 1c59h val_fet_2
ALL 1c6ch class_04          ; the 'command class 04' routine (FOR, NEXT)
ALL 1c79h next_2num         ; class 08 - evaluate next two numeric expressions (comma separated)
ALL 1c7ah expt_2num
ALL 1c82h expt_1num         ; class 06 - command line number parser
ALL 1c8ah report_c          ; report C - nonsense in Basic
ALL 1c8ch expt_exp          ; class 0A - evaluate next expression
ALL 1c96h perms             ; the 'set permanent colours' subroutine (class 07)
ALL 1cbeh class_09          ; the 'command class 09' routine (PLOT, DRAW, CIRCLE)
ALL 1cd6h cl_09_1
ALL 1cdbh class_0b          ; the 'command class 0B' routine (SAVE, LOAD, VERIFY & MERGE)
ALL 1cdeh fetch_num         ; the 'fetch a number' subroutine
ALL 1ce6h use_zero          ; add 0 to the calculator stack
ALL 1ceeh report_9          ; the 'STOP' command routine
ALL 1cf0h if                ; the 'IF' command routine
ALL 1d00h if_1
ALL 1d03h for               ; the 'FOR' command routine
ALL 1d10h f_use_1           ; STEP 1 has been used
ALL 1d16h f_reorder
ALL 1d34h f_l_and_s         ; initial values for limit and STEP
ALL 1d64h f_loop            ; search next from current position
ALL 1d7ch f_found           ; correct NEXT has been found
ALL 1d84h report_i          ; report I - FOR without NEXT
ALL 1d86h look_prog         ; the 'look-prog' subroutine (search DATA, DEF FN or NEXT)
ALL 1d8bh look_p_1          ; loop for each line
ALL 1da3h look_p_2
ALL 1dabh next              ; the 'NEXT' command routine
ALL 1dd8h report_1          ; report 1 - NEXT without FOR
ALL 1ddah next_loop         ; the 'NEXT-loop' subroutine
ALL 1de2h next_1
ALL 1de9h next_2            ; loop is impossible
ALL 1dech read_3            ; the 'READ' command routine
ALL 1dedh read
ALL 1e08h report_e2         ; report E - out of data
ALL 1e0ah read_1            ; picking a value from DATA list
ALL 1e1eh read_2
ALL 1e27h data              ; the 'DATA' command routine
ALL 1e2ch data_1            ; loop for each expression in DATA list
ALL 1e37h data_2            ; DATA statement ignored at runtime
ALL 1e39h pass_by           ; the 'pass-by' subroutine
ALL 1e42h restore           ; the 'RESTORE' command routine
ALL 1e45h rest_run
ALL 1e4fh randomize         ; the 'RANDOMIZE' command routine
ALL 1e5ah rand_1
ALL 1e5fh continue          ; the 'CONTINUE' command routine
ALL 1e67h go_to             ; the 'GO TO' command routine
ALL 1e73h go_to_2           ; determine line number of next statement
ALL 1e7ah out               ; the 'OUT' command routine
ALL 1e80h poke              ; the 'POKE' command routine
ALL 1e85h two_param         ; the 'two-param' subroutine
ALL 1e8eh two_p_1
ALL 1e94h find_int1         ; the 'find integers' subroutine (integer into A)
ALL 1e99h find_int2         ; command line integer parser into BC
ALL 1e9ch find_i_1
ALL 1e9fh report_b2         ; report B - integer out of range
ALL 1ea1h run               ; the 'RUN' command routine
ALL 1each clear             ; the 'CLEAR' command routine
ALL 1eafh clear_run
ALL 1eb7h clear_1
ALL 1edah report_m          ; report M - RAMTOP no good
ALL 1edch clear_3           ; continue with CLEAR
ALL 1eedh go_sub            ; the 'GO SUB' command routine
ALL 1f05h test_room         ; the 'test-room' subroutine
ALL 1f15h report_4          ; report 4 - out of memory
ALL 1f1ah free_mem          ; the 'free memory' subroutine
ALL 1f23h return_stmt       ; the 'RETURN' command routine
ALL 1f36h report_7          ; report 7 - RETURN without GOSUB
ALL 1f3ah pause             ; the 'PAUSE' command routine
ALL 1f3dh pause_1
ALL 1f49h pause_2
ALL 1f4fh pause_end         ; period of pause has finished
ALL 1f54h break_key         ; the 'BREAK-key' subroutine
ALL 1f60h def_fn            ; the 'DEF FN' command routine
ALL 1f6ah def_fn_1          ; get the variable
ALL 1f7dh def_fn_2
ALL 1f86h def_fn_3          ; loop for each parameter
ALL 1f89h def_fn_4
ALL 1f94h def_fn_5
ALL 1fa6h def_fn_6          ; get the definition of the function
ALL 1fbdh def_fn_7
ALL 1fc3h unstack_z         ; the 'unstack-z' subroutine
ALL 1fc9h lprint            ; the 'LPRINT & PRINT' command routines
ALL 1fcdh print
ALL 1fcfh print_1
ALL 1fdfh print_2           ; print controlling (PRINT, LPRINT, INPUT)
ALL 1fe5h print_3           ; position controllers
ALL 1ff2h print_4
ALL 1ff5h print_cr          ; the 'PRINT a carriage return' subroutine
ALL 1ffch pr_item_1         ; the 'PRINT items' subroutine (test for AT)
ALL 200eh pr_item_2         ; test for TAB
ALL 201eh pr_at_tab         ; print AT and TAB
ALL 2024h pr_item_3         ; embedded colour items
ALL 203ch pr_string         ; loop for characters in a string
ALL 2045h pr_end_z          ; the 'end of printing' subroutine
ALL 2048h pr_st_end
ALL 204eh pr_posn_1         ; the 'PRINT position' subroutine
ALL 2061h pr_posn_2
ALL 2067h pr_posn_3
ALL 206eh pr_posn_4
ALL 2070h str_alter         ; the 'alter stream' subroutine
ALL 2089h input             ; the 'INPUT' command routine
ALL 2096h input_1
ALL 20adh input_2
ALL 20c1h in_item_1         ; INPUT and PRINT items loop
ALL 20d8h in_item_2         ; INPUT LINE
ALL 20edh in_item_3         ; simple INPUT variables
ALL 20fah in_prompt         ; build prompt message in workspace
ALL 211ah in_pr_1
ALL 211ch in_pr_2
ALL 2129h in_pr_3
ALL 213ah in_var_1          ; input variables
ALL 2148h in_var_2
ALL 215eh in_var_3
ALL 2161h in_var_4          ; reset system variables before assignment
ALL 2174h in_var_5
ALL 219bh in_var_6
ALL 21afh in_next_1         ; further INPUT items
ALL 21b2h in_next_2
ALL 21b9h in_assign         ; the 'INPUT-assign' subroutine
ALL 21ceh report_c2         ; report C - Nonsense in Basic
ALL 21d0h in_stop           ; INPUT line starts with STOP
ALL 21d4h report_h          ; report H - STOP in INPUT
ALL 21d6h in_chan_k         ; the 'INPUT-chan-K' subroutine
ALL 21e1h co_temp_1         ; the 'colour item' routines
ALL 21e2h co_temp_2
ALL 21f2h co_temp_3
ALL 21fch co_temp_4         ; colour items are printed calling PRINT
ALL 2211h co_temp_5         ; temporary system variables
ALL 2228h co_temp_6
ALL 2234h co_temp_7         ; handle PAPER & INK
ALL 223eh co_temp_8
ALL 2244h report_k          ; report K - invalid colour
ALL 2246h co_temp_9         ; continue handling PAPER & INK
ALL 2257h co_temp_a
ALL 2258h co_temp_b
ALL 226ch co_change         ; the 'colour-change' subroutine
ALL 2273h co_temp_c         ; handling FLASH & BRIGHT
ALL 227dh co_temp_d
ALL 2287h co_temp_e
ALL 2294h border            ; the 'BORDER' command routine
ALL 22a6h border_1
ALL 22aah pixel_add         ; the 'pixel address' subroutine (returns pixel addr in HL for coord in BC)
ALL 22cbh point_sub         ; the 'POINT' subroutine
ALL 22d4h point_lp
ALL 22dch plot              ; the 'PLOT' command routine
ALL 22e5h plot_sub
ALL 22f0h plot_loop
ALL 22fdh pl_tst_in
ALL 2303h plot_end
ALL 2307h stk_to_bc         ; the 'stack-to-bc' subroutine
ALL 2314h stk_to_a          ; the 'stack-to-a' subroutine
ALL 2320h circle            ; the 'CIRCLE' command routine
ALL 233bh c_r_gre_1         ; on stack = X Y Z draws circle
ALL 235ah c_arc_ge1
ALL 2382h draw              ; the 'DRAW' command routine
ALL 238dh dr_3_prms         ; DRAW with 3 params
ALL 23a3h dr_sin_nz
ALL 23c1h dr_prms
ALL 2420h drw_steps         ; the arc-drawing loop
ALL 2425h arc_loop
ALL 2439h arc_start
ALL 245fh arc_end
ALL 2477h line_draw
ALL 247dh cd_prms1          ; the 'initial parameters' subroutine (CIRCLE, DRAW)
ALL 2495h use_252
ALL 2497h draw_save
ALL 24b7h draw_line         ; the 'line-drawing' subroutine (draws a line from COORDS to BC)
ALL 24c4h dl_x_ge_y
ALL 24cbh dl_larger
ALL 24ceh d_l_loop
ALL 24d4h d_l_diag
ALL 24dbh d_l_hr_vt
ALL 24dfh d_l_step
ALL 24ech d_l_plot
ALL 24f7h d_l_range
ALL 24f9h report_b3         ; report B - integer out of range
ALL 24fbh scanning          ; the 'scanning' subroutine (expression evaluation)
ALL 24ffh s_loop_1
ALL 250fh s_quote_s         ; checking string quotes
ALL 2522h s_2_coord         ; two-coordinates subroutine
ALL 252dh s_rport_c
ALL 2530h syntax_z          ; the 'syntax-z' subroutine
ALL 2535h s_scrns_s
ALL 254fh s_scrn_lp
ALL 255ah s_sc_match
ALL 255dh s_sc_rows
ALL 2573h s_scr_nxt
ALL 257dh s_scr_sto
ALL 2580h s_attr_s
ALL 2596h scn_func_table    ; the scanning function table
ALL 25afh s_u_plus          ; the scanning function routines
ALL 25b3h s_quote           ; the scanning quote routine
ALL 25beh s_q_again
ALL 25cbh s_q_copy
ALL 25d9h s_q_prms
ALL 25dbh s_string
ALL 25e8h s_bracket         ; reduces string quotes pairs
ALL 25f5h s_fn
ALL 25f8h s_rnd             ; the 'RND' routine
ALL 2625h s_rnd_end
ALL 2627h s_pi              ; the 'PI' routine
ALL 2630h s_pi_end
ALL 2634h s_inkeys          ; the 'INKEY$' routine
ALL 2660h s_ik_stk
ALL 2665h s_ik_en
ALL 2668h s_screens         ; the 'SCREEN$' routine
ALL 2672h s_attr            ; the 'ATTR' routine
ALL 267bh s_point           ; the 'POINT' routine
ALL 2684h s_alphanum
ALL 268dh s_decimal         ; scanning decimal routine
ALL 26b5h s_stk_dec
ALL 26b6h s_sd_skip
ALL 26c3h s_numeric         ; numeric result has been identified
ALL 26c9h s_letter          ; the 'scanning variable' routine
ALL 26ddh s_cont_1
ALL 26dfh s_negate          ; checking for negation
ALL 2707h s_no_to_str       ; checking for STR$ and CHR$
ALL 270dh s_push_po         ; remember priority code
ALL 2712h s_cont_2          ; checking for end of expression
ALL 2713h s_cont_3
ALL 2723h s_opertr
ALL 2734h s_loop            ; main loop
ALL 274ch s_stk_lst
ALL 275bh s_syntest         ; syntax check
ALL 2761h s_report_c2       ; report C - Nonsense in Basic
ALL 2764h s_runtest         ; remember nature of last value
ALL 2770h s_loopend         ; continue loop
ALL 2773h s_tighter
ALL 2788h s_not_and
ALL 2790h s_next
ALL 2795h table_ops         ; the table of operators
ALL 27b0h table_prior       ; the table of properties
ALL 27bdh s_fn_sbrn         ; the 'scanning function' subroutine
ALL 27d0h sf_brkt_1         ; check for '('
ALL 27d9h sf_argmts
ALL 27e4h sf_brkt_2         ; check for ')'
ALL 27e6h sf_rprt_c         ; if not, report C - nonsense in Basic
ALL 27e9h sf_flag_6
ALL 27f4h sf_syn_en         ; continue scanning the line
ALL 27f7h sf_run            ; search for DEF FN statement
ALL 2802h sf_argmt1
ALL 2808h sf_find_df
ALL 2812h report_p          ; report P - FN without DEF
ALL 2814h sf_cp_def         ; DEF FN found
ALL 2825h sf_not_fd
ALL 2831h sf_values         ; FN is being evaluated
ALL 2843h sf_arg_lp
ALL 2852h sf_arg_vl
ALL 2885h sf_r_br_2         ; check for ')'
ALL 288bh report_q          ; report Q - parameter error
ALL 288dh sf_value          ; evaluate function
ALL 28abh fn_skipover       ; the 'function skipover' subroutine
ALL 28b2h look_vars         ; the 'look-vars' subroutine
ALL 28d4h v_char            ; find end char of name with more than 1 character
ALL 28deh v_str_var         ; simple strings and arrays of strings
ALL 28e3h v_test_fn
ALL 28efh v_run_syn
ALL 28fdh v_run             ; basic line is being executed
ALL 2900h v_each            ; loop that scans all existing variables
ALL 2912h v_matches
ALL 2913h v_spaces
ALL 2929h v_get_ptr         ; names do not match
ALL 292ah v_next
ALL 2932h v_80_byte         ; variable not found
ALL 2934h v_syntax          ; checking snytax
ALL 293eh v_found_1         ; entry with correct name was found
ALL 293fh v_found_2
ALL 2943h v_pass
ALL 294bh v_end             ; setting exit parameters
ALL 2951h stk_f_arg         ; the 'stack function argument' subroutine
ALL 295ah sfa_loop
ALL 296bh sfa_cp_vr
ALL 2981h sfa_match         ; match has been found.
ALL 2991h sfa_end
ALL 2996h stk_var           ; the 'stack-var' routine
ALL 29a1h sv_simplestring   ; simple string params found
ALL 29aeh sv_arrays         ; base address of an array element found
ALL 29c0h sv_ptr            ; numeric arrays and string arrays pointer into DE
ALL 29c3h sv_comma          ; find array element parameters
ALL 29d8h sv_close          ; checking for string slicing
ALL 29e0h sv_ch_add
ALL 29e7h sv_count          ; parameter loop
ALL 29eah sv_loop
ALL 29fbh sv_mult
ALL 2a12h sv_rpt_c          ; report error C if syntax checking
ALL 2a20h report_3          ; report 3 - Subscript out of range
ALL 2a22h sv_number         ; calculate address of the location
ALL 2a2ch sv_elemstring     ; calculate length of last string array dimension
ALL 2a45h sv_slice          ; call slicing routine
ALL 2a48h sv_dim            ; check for '('
ALL 2a49h sv_sliceq         ; search the last '(' in a loop
ALL 2a52h slicing           ; the 'slicing' subroutine
ALL 2a7ah sl_rpt_c          ; report C if not ' TO '
ALL 2a81h sl_second         ; evaluate second parameter of slicing
ALL 2a94h sl_define         ; the 'new' parameters are defined
ALL 2aa8h sl_over
ALL 2aadh sl_store
ALL 2ab1h stk_st_0          ; the 'stack-store' subroutine
ALL 2ab2h stk_sto_string
ALL 2ab6h stk_store         ; put ABCDE to top of stack
ALL 2acch int_exp1          ; the 'int-exp' subroutine
ALL 2acdh int_exp2
ALL 2ae8h i_carry           ; calc value for 'error register'
ALL 2aebh i_restore         ; restore registers
ALL 2aeeh ld_de_plus_1      ; the 'LD DE,(DE+1)" subroutine
ALL 2af4h get_hl_times_de   ; the 'get-HL*DE' subroutine
ALL 2affh let               ; the 'LET' command routine
ALL 2b0bh l_each_ch         ; enter loop for characters of a long name
ALL 2b0ch l_no_sp
ALL 2b1fh l_test_ch         ; separate numeric and string names
ALL 2b29h l_spaces          ; make room for variable
ALL 2b3eh l_char            ; extra codes of a long name
ALL 2b4fh l_single
ALL 2b59h l_numeric         ; last value can be transferred to var area
ALL 2b66h l_exists          ; variable already exists
ALL 2b72h l_deletestring    ; fetch params of string variable
ALL 2b9bh l_length          ; put length of new area to stack
ALL 2ba3h l_in_ws           ; restore saved values
ALL 2ba6h l_enter           ; the 'L-enter' subroutine
ALL 2bafh l_addstring       ; LET subroutine continues
ALL 2bc0h l_newstring       ; new declared simple strings are handled
ALL 2bc6h l_string          ; the 'L-string' subroutine
ALL 2beah l_first           ; the 'L-first' subroutine
ALL 2bf1h stk_fetch         ; the 'stk-fetch' subroutine - fetch top of stack to ABCDE
ALL 2c02h dim_stmt          ; the 'DIM' command routine
ALL 2c05h d_report_c        ; report C
ALL 2c15h d_run             ; reclaims an existing array
ALL 2c1fh d_letter          ; initial parameters of new array are found
ALL 2c2dh d_size
ALL 2c2eh d_no_loop         ; loop for accessing each dimension
ALL 2c7ch dim_clear         ; clears elements of new array
ALL 2c7fh dim_sizes         ; enters the dimension sizes
ALL 2c88h alphanum          ; the 'alphanum' subroutine
ALL 2c8dh alpha             ; the 'alpha' subroutine (checks whether a contains a letter)
ALL 2c9bh dec_to_fp         ; the 'decimal to floating point' subroutine
ALL 2ca2h bin_digit         ; it's a binary number (after BIN)
ALL 2cb3h bin_end           ; end of binary number
ALL 2cb8h not_bin           ; other numbers (integers or decimal)
ALL 2ccbh decimal           ; number is a decimal
ALL 2ccfh dec_rpt_c         ; if no digit after a '.', report C
ALL 2cd5h dec_sto_1         ; store 1 in memory area M0
ALL 2cdah nxt_dgt_1         ; evaluate next digit
ALL 2cebh e_format          ; check 'E' or 'e' after decimal
ALL 2cf2h sign_flag
ALL 2cfeh sign_done
ALL 2cffh st_e_part         ; check for digit after E/e
ALL 2d18h e_fp_jump         ; jump to x*10^m
ALL 2d1bh numeric           ; the 'numeric' subroutine (check for 0..9)
ALL 2d22h stk_digit         ; the 'stk digit' subroutine
ALL 2d28h stack_a           ; the 'stack-A' subroutine (stack contents of A)
ALL 2d2bh stack_bc          ; the 'stack-BC' subroutine (stack contents of BC)
ALL 2d3bh int_to_fp         ; the 'integer to floating-point' subroutine
ALL 2d40h nxt_dgt_2
ALL 2d4fh e_to_fp           ; the 'E-format to floating-point' subroutine
ALL 2d55h e_save
ALL 2d60h e_loop
ALL 2d6dh e_division
ALL 2d6eh e_fetch
ALL 2d71h e_test_end
ALL 2d7bh e_end
ALL 2d7fh int_fetch         ; the 'int-fetch' subroutine
ALL 2d8ch p_int_sto         ; the 'int-store' subroutine
ALL 2d8eh int_store
ALL 2da2h fp_to_bc          ; the 'floating-point to BC' subroutine
ALL 2dadh fp_delete
ALL 2dc1h log_2_pow_a       ; the 'LOG (2^A)' subroutine
ALL 2dd5h fp_to_a           ; the 'floating-point to a' subroutine
ALL 2de1h fp_a_end
ALL 2de3h print_fp          ; the 'print a floating-point number' subroutine
ALL 2df2h pf_negative
ALL 2df8h pf_positive
ALL 2e01h pf_loop           ; loop for large numbers
ALL 2e1eh pf_save
ALL 2e24h pf_small
ALL 2e56h pf_large          ; numbers > 2^27
ALL 2e6fh pf_medium         ; integer part of X is stored in mem 3 and 4
ALL 2e7bh pf_bits           ; numbers < 65536
ALL 2e8ah pf_bytes
ALL 2ea1h pf_digits
ALL 2ea9h pf_insert
ALL 2eb3h pf_test_2
ALL 2eb8h pf_all_9
ALL 2ecbh pf_more
ALL 2ecfh pf_fraction       ; fractionla part of X is stored in the print buffer
ALL 2edfh pf_frn_lp
ALL 2eech pf_fr_dgt
ALL 2eefh pf_fr_exx
ALL 2f0ch pf_round          ; round the digits in the print buffer to max. 8 digits
ALL 2f18h pf_round_lp
ALL 2f25h pf_round_back
ALL 2f2dh pf_count
ALL 2f46h pf_not_e
ALL 2f4ah pf_e_sbrn
ALL 2f52h pf_out_lp
ALL 2f59h pf_out_dig
ALL 2f5eh pf_dec_out
ALL 2f64h pf_dec_0s
ALL 2f6ch pf_e_format
ALL 2f83h pf_e_pos
ALL 2f85h pf_e_sign
ALL 2f8bh ca_is_10a_plus_c  ; the 'CA=10*A+C' subroutine
ALL 2f9bh prep_add          ; the 'prepare to add' subroutine
ALL 2fafh neg_byte
ALL 2fbah fetch_two         ; the 'fetch two numbers' subroutine
ALL 2fddh shift_fp          ; the 'shift addend' subroutine
ALL 2fe5h one_shift
ALL 2ff9h addend_0
ALL 2ffbh zeros_4_5
ALL 3004h add_back          ; the 'add-back' subroutine
ALL 300dh all_added
ALL 300fh calc_subtract     ; the 'subtraction' operation (offset 03: 'subtract')
ALL 3014h calc_addition     ; the 'addition' operation (offset 0F: 'addition')
ALL 303ch addn_overflow
ALL 303eh full_addn
ALL 3055h shift_len
ALL 307ch test_neg
ALL 309fh add_rep_6         ; report 6
ALL 30a3h end_compl
ALL 30a5h go_nc_mlt
ALL 30a9h hl_is_hl_times_de ; the 'HL=HL*DE' subroutine
ALL 30b1h hl_loop
ALL 30bch hl_again
ALL 30beh hl_end
ALL 30c0h prep_mul_div      ; the 'prepare to multiply or divide' subroutine
ALL 30cah calc_multiply     ; the 'multiplication' operation (offset 04: 'multiply')
ALL 30eah mult_rslt
ALL 30efh mult_overflow
ALL 30f0h mult_long
ALL 3114h mult_loop         ; multiplier loop
ALL 311bh no_add
ALL 3125h strt_mlt
ALL 313bh make_exp
ALL 313dh divn_expt         ; common for multiplication and division
ALL 3146h overflow1_clr
ALL 3151h overflow2_clr
ALL 3155h test_norm         ; normalisation
ALL 3159h near_zero
ALL 315dh zero_rslt
ALL 315eh skip_zero
ALL 316ch normalise         ; the normalisation operation
ALL 316eh shift_one
ALL 3186h normal_now        ; finish the nomalisation
ALL 3195h overflow_clr
ALL 31adh report_6          ; report 6 - number too big
ALL 31afh calc_division     ; the 'division' operation (offset 05: 'division')
ALL 31d2h div_loop          ; division loop
ALL 31dbh div_34th
ALL 31e2h div_start
ALL 31f2h subn_only
ALL 31f9h no_restore
ALL 31fah count_one
ALL 3214h calc_truncate     ; the 'integer truncation towards zero' operation (offset 3A: 'truncate')
ALL 3221h t_gr_zero
ALL 3225h chk_65536         ; check for -65536
ALL 3233h t_first
ALL 323fh t_small           ; check for small integers
ALL 3252h t_numeric
ALL 325eh t_test
ALL 3261h t_shift
ALL 3267h t_store
ALL 326ch t_exponent        ; large values are considered
ALL 326dh x_large
ALL 3272h nil_bytes         ; clear the mantissa bytes
ALL 327eh byte_zero
ALL 3283h bits_zero
ALL 328ah less_mask
ALL 3290h ix_end
ALL 3293h re_st_two         ; the 're-stack two' subroutine
ALL 3296h restk_sub
ALL 3297h re_stack          ; the 're-stack' subroutine
ALL 32b1h rs_normalise
ALL 32b2h rs_loop
ALL 32bdh rs_store
ALL 32c5h stk_zero          ; condensed form of 0 (table of constants)
ALL 32c8h stk_one           ; condensed form of 1
ALL 32cch stk_half          ; condensed form of 0.1
ALL 32ceh stk_pi_half       ; PI/2
ALL 32d3h stk_ten           ; condensed form of 10
ALL 32d7h stk_addr_table    ; the table of addresses
ALL 335bh calculate         ; the 'calculate' subroutine
ALL 335eh gen_ent_1
ALL 3362h gen_ent_2
ALL 3365h re_entry
ALL 336ch scan_ent
ALL 3380h first_3d
ALL 338ch double_a
ALL 338eh ent_table
ALL 33a1h calc_delete       ; the 'delete' operation (offset 02: 'delete')
ALL 33a2h calc_fp_calc_2    ; the 'single operation' subroutine (offset 3B: 'fp-calc-2')
ALL 33a9h test_5_sp         ; the 'test 5-spaces' subroutine
ALL 33b4h stack_num         ; the 'stack number' subroutine
ALL 33c0h move_fp           ; the 'move a floating-point number' subroutine (offset 31: 'duplicate')
ALL 33c6h stk_data          ; the 'stack literals' subroutine (offset 34: 'stk-data')
ALL 33c8h stk_const
ALL 33deh form_exp
ALL 33f1h stk_zeros
ALL 33f7h skip_cons         ; the 'skip constants' subroutine
ALL 33f8h skip_next
ALL 3406h loc_mem           ; the 'memory location' subroutine
ALL 340fh calc_get_mem_0    ; the 'get from memory area' operation (offsets E0..E5: 'get-mem-0' .. 'get-mem-5')
ALL 341bh calc_stk_zero     ; the 'stack a constant' operation (offsets A0..A4: 'stk-zero'..''stk-ten')
ALL 342dh calc_st_mem_0     ; the 'store in memory area' operation (offsets C0..C5: 'st-mem-0'..'st-mem-5')
ALL 343ch exchange          ; the 'exchange' operation (offset 01: 'exchange')
ALL 343eh swap_byte
ALL 3449h calc_series_06    ; the 'series generator' operation (offsets 86, 88, 8C: 'series-06', 'series-08', 'series-0C')
ALL 3453h g_loop            ; polynom generation main loop
ALL 346ah calc_abs          ; the 'absolute magnitude' operation (offset 2A: 'abs')
ALL 346eh calc_negate       ; the 'unary minus' operation (offset 1B: 'negate')
ALL 3474h neg_test          ; 'ABS' enters here
ALL 3483h int_case          ; the 'integer case' subroutine
ALL 3492h calc_sgn          ; the 'signum' operation (offset 29: 'sgn')
ALL 34a5h calc_in           ; the 'IN' function (offset 2C: 'in')
ALL 34ach calc_peek         ; the 'PEEK' function (offset 2B: 'peek')
ALL 34b0h in_pk_stk
ALL 34b3h calc_usr_no       ; the 'USR' function (offset 2D: 'usr-no')
ALL 34bch calc_usr_string   ; the 'USR-string' function (offset 19: 'usr-$')
ALL 34d3h usr_range
ALL 34e4h usr_stack
ALL 34e7h report_a          ; report A - invalid argument
ALL 34e9h test_zero         ; the 'test-zero' subroutine
ALL 34f9h calc_greater_0    ; the 'greater than zero' operation (offset 37: 'greater-0')
ALL 3501h calc_not          ; the 'NOT' operation (offset 30: 'not')
ALL 3506h calc_less_0       ; the 'less than zero' operation (offset 36: 'less-0')
ALL 3507h sign_to_c
ALL 350bh fp_0_1            ; the 'zero or one' subroutine
ALL 351bh calc_or           ; the 'OR' operation (offset 07: 'or')
ALL 3524h calc_no_and_no    ; the 'number AND number' operation (offset 08: 'no-and-no')
ALL 352dh calc_str_and_no   ; the 'string AND number' operation (offset 10: 'str-and-no')
ALL 353bh calc_comparison   ; the 'comparison' operations (offsets 09..0E, 11..16: 'no-l-eql'..'strs-eql')
ALL 3543h ex_or_not
ALL 354eh nu_or_str
ALL 3559h strings
ALL 3564h byte_comp
ALL 356bh second_low
ALL 3572h both_null
ALL 3575h sec_plus
ALL 3585h first_less
ALL 3588h str_test
ALL 358ch end_tests
ALL 359ch calc_strs_add     ; the 'string concatenation' operation (offset 17: 'strs-add')
ALL 35b7h other_str
ALL 35bfh stk_pntrs         ; the 'stk-pntrs' subroutine
ALL 35c9h calc_chrs         ; the 'CHR$' function (offset 2F: 'chr$')
ALL 35dch report_b4         ; report B - integer out of range
ALL 35deh calc_val          ; the 'VAL' and 'VAL$' operation (offsets 1D: 'val', and 18: 'val$')
ALL 360ch v_report_c
ALL 361fh calc_strstring    ; the 'STR$' function (offset 2E: 'str$')
ALL 3645h calc_read_in      ; the 'read-in' operation (offset 1A: 'read-in')
ALL 365fh r_i_store
ALL 3669h calc_code         ; the 'CODE' function (offset 1C: 'code')
ALL 3671h stk_code
ALL 3674h calc_len          ; the 'LEN' function (offset 1E: 'len')
ALL 367ah calc_dec_jr_nz    ; the 'decrease the counter' subroutine (offset 35: 'dec-jr-nz')
ALL 3686h calc_jump         ; the 'jump' operation (offset 33: 'jump')
ALL 3687h jump_2
ALL 368fh calc_jump_true    ; the 'jump on true' subroutine (offset 00: 'jump-true')
ALL 369bh calc_end_calc     ; the 'end-calc' subroutine (offset 38: 'end-calc')
ALL 36a0h calc_n_mod_m      ; the 'modulo' subroutine (offset 32: 'n-mod-m')
ALL 36afh calc_int          ; the 'INT' operation (offset 27: 'int')
ALL 36b7h x_neg
ALL 36c2h int_exit
ALL 36c4h calc_exp          ; the 'exponential' operation (offset 26: 'exp')
ALL 3703h report_6b         ; report 6 - number too big
ALL 3705h n_negative
ALL 370ch result_ok
ALL 370eh result_zero
ALL 3713h calc_ln           ; the 'natural logarithm' operation (offset 25: 'ln')
ALL 371ah report_a2         ; report A - Invalid argument
ALL 371ch ln_valid
ALL 373dh gre_0_8
ALL 3783h calc_get_argt     ; the 'reduce argument' operation (offset 39: 'get-argt')
ALL 37a1h zplus
ALL 37a8h yneg
ALL 37aah calc_cos          ; the 'cosine' operation (offset 20: 'cos')
ALL 37b5h calc_sine         ; the 'sine' operation (offset 1f: 'sin')
ALL 37b7h c_ent
ALL 37dah calc_tan          ; the 'tangens' operation (offset 21: 'tan')
ALL 37e2h calc_atn          ; the 'arcus tangens' operation (offset 24: 'atn')
ALL 37f8h atn_small
ALL 37fah atn_cases
ALL 3833h calc_asn          ; the 'arcus sine' operation (offset 22: 'asn')
ALL 3843h calc_acs          ; the 'arcus cosine' operation (offset 23: 'acs')
ALL 384ah calc_sqr          ; the 'square root' operation (offset 28: 'sqr')
ALL 3851h calc_to_power     ; the 'exponentiation' operation (offset 06: 'to-power')
ALL 385dh tp_xis0
ALL 386ah tp_one
ALL 386ch tp_last
ALL 3d00h character_set     ; the character set
ALL 4000h display_file      ; screen display file
ALL 5800h attrs             ; screen colour attributes
ALL 5b00h swap              ; paging subroutine
ALL 5b10h stoo              ; paging subroutine
ALL 5b21h younger           ; paging subroutine
ALL 5b2ah regnuoy           ; paging subroutine
ALL 5b3ah onerr             ; paging subroutine
ALL 5b52h oldhl             ; temp. register while switching ROMs
ALL 5b54h oldbc             ; temp. register while switching ROMs
ALL 5b56h oldaf             ; temp. register while switching ROMs
ALL 5b58h target            ; subroutine address in ROM 3
ALL 5b5ah retaddr           ; return address in ROM 1
ALL 5b5ch bankm             ; copy of last byte output to bank
ALL 5b5dh ramrst            ; RST 8 instruction
ALL 5b5eh ramerr            ; error number, ROM 1
ALL 5b5fh baud              ; RS232 bit period in T states/26
ALL 5b61h serfl             ; 2nd-character-received-flag, and data
ALL 5b63h col               ; current column from 1 to width
ALL 5b64h width             ; paper column width
ALL 5b65h tvpars            ; no of inline params expected by RS232
ALL 5b66h flags3            ; various flags
ALL 5b67h bank678           ; copy of last byte output to I/O port 1FFDh (ram switching)
ALL 5b68h xloc              ; x location when using unexpanded COPY command
ALL 5b69h yloc              ; y location when using unexpanded COPY command
ALL 5b6ah oldsp             ; old SP (stack pointer) when TSTACK is in use
ALL 5b6ch synret            ; return address for ONERR
ALL 5b6eh lastv             ; last value printed by calculator
ALL 5b73h rcline            ; current line being renumbered
ALL 5b75h rcstart           ; starting line number for renumbering
ALL 5b77h rcstep            ; incremental value for renumbering
ALL 5b79h loddrv            ; holds 'T' if SAVE is to tape or other characters
ALL 5b7ah dumplf            ; holds the bumber of 1/216ths user for line feeds in COPY EXP
ALL 5b7ch strip1            ; stripe one bitmap
ALL 5b84h strip2            ; stripe two bitmap
ALL 5b8ch tstack            ; temp. stack grows down from here
